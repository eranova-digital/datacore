
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  Request: 'Request',
  BusinessRecord: 'BusinessRecord',
  BalanceSheet: 'BalanceSheet'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const RequestScalarFieldEnum = {
  id: 'id',
  ip: 'ip',
  ua: 'ua',
  url: 'url',
  method: 'method',
  requestBody: 'requestBody',
  requestParams: 'requestParams',
  requestQuery: 'requestQuery',
  responseStatus: 'responseStatus',
  responseBody: 'responseBody',
  responseTime: 'responseTime',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
} as const

export type RequestScalarFieldEnum = (typeof RequestScalarFieldEnum)[keyof typeof RequestScalarFieldEnum]


export const BusinessRecordScalarFieldEnum = {
  id: 'id',
  cui: 'cui',
  denumire: 'denumire',
  nrRegCom: 'nrRegCom',
  telefon: 'telefon',
  stareInregistrare: 'stareInregistrare',
  dataInregistrare: 'dataInregistrare',
  codCaen: 'codCaen',
  denumireCaen: 'denumireCaen',
  statusRoEFactura: 'statusRoEFactura',
  organFiscalCompetent: 'organFiscalCompetent',
  formaProprietate: 'formaProprietate',
  formaOrganizare: 'formaOrganizare',
  formaJuridica: 'formaJuridica',
  tva: 'tva',
  adresaSediuSocial: 'adresaSediuSocial',
  adresaDomiciliuFiscal: 'adresaDomiciliuFiscal',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt'
} as const

export type BusinessRecordScalarFieldEnum = (typeof BusinessRecordScalarFieldEnum)[keyof typeof BusinessRecordScalarFieldEnum]


export const BalanceSheetScalarFieldEnum = {
  id: 'id',
  cui: 'cui',
  an: 'an',
  indicators: 'indicators',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt'
} as const

export type BalanceSheetScalarFieldEnum = (typeof BalanceSheetScalarFieldEnum)[keyof typeof BalanceSheetScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

